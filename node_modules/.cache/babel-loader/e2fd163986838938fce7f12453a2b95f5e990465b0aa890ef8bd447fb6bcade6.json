{"ast":null,"code":"var _jsxFileName = \"/Users/bookstore/Desktop/krmentor/material-dashboard-material-ui-v4/src/views/Maps/Maps.js\",\n  _s = $RefreshSig$();\nimport { GoogleMap, Marker, useLoadScript } from \"@react-google-maps/api\";\nimport { useMemo } from \"react\";\nimport React from \"react\";\nimport \"../../assets/css/App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Maps() {\n  _s();\n  const [allcase, setAllcase] = React.useState();\n  const center = useMemo(() => ({\n    lat: 13.7884586,\n    lng: 100.6083957\n  }), []);\n  React.useEffect(() => {\n    async function getJSON() {\n      let arr = [];\n      const response = await fetch(\"http://localhost:3333/getmap\", {\n        method: \"GET\" // or 'PUT'\n      });\n\n      const sum = await response.json();\n      for (let i = 0; i < sum.length; i++) {\n        const obj = {\n          lat: parseFloat(sum[i].lat),\n          lng: parseFloat(sum[i].lng)\n        };\n        arr.push(obj);\n      }\n      setAllcase(arr);\n    }\n    getJSON();\n  }, []);\n  React.useEffect(() => {\n    console.log(allcase);\n  }, [allcase]);\n  const {\n    isLoaded\n  } = useLoadScript({\n    googleMapsApiKey: \"AIzaSyBJNF1WF1PZ072rIlzasimj-wEVnaCu2WY\"\n  });\n  const markers = [{\n    lat: 18.5204,\n    lng: 73.8567\n  }, {\n    lat: 18.5314,\n    lng: 73.8446\n  }, {\n    lat: 18.5642,\n    lng: 73.7769\n  }];\n  const onLoad = map => {\n    const bounds = new google.maps.LatLngBounds();\n    allcase === null || allcase === void 0 ? void 0 : allcase.forEach(({\n      lat,\n      lng\n    }) => bounds.extend({\n      lat,\n      lng\n    }));\n    map.fitBounds(bounds);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: !isLoaded ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerClassName: \"map-container\",\n      onLoad: onLoad,\n      center: center,\n      zoom: 10,\n      children: allcase === null || allcase === void 0 ? void 0 : allcase.map(({\n        lat,\n        lng\n      }) => /*#__PURE__*/_jsxDEV(Marker, {\n        position: {\n          lat,\n          lng\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(Maps, \"dN8YvE21BU344jEwh6xZFnGDNYk=\", false, function () {\n  return [useLoadScript];\n});\n_c = Maps;\n;\nvar _c;\n$RefreshReg$(_c, \"Maps\");","map":{"version":3,"names":["GoogleMap","Marker","useLoadScript","useMemo","React","jsxDEV","_jsxDEV","Maps","_s","allcase","setAllcase","useState","center","lat","lng","useEffect","getJSON","arr","response","fetch","method","sum","json","i","length","obj","parseFloat","push","console","log","isLoaded","googleMapsApiKey","markers","onLoad","map","bounds","google","maps","LatLngBounds","forEach","extend","fitBounds","className","children","fileName","_jsxFileName","lineNumber","columnNumber","mapContainerClassName","zoom","position","_c","$RefreshReg$"],"sources":["/Users/bookstore/Desktop/krmentor/material-dashboard-material-ui-v4/src/views/Maps/Maps.js"],"sourcesContent":["import { GoogleMap, Marker, useLoadScript } from \"@react-google-maps/api\";\nimport { useMemo } from \"react\";\nimport React from \"react\";\nimport \"../../assets/css/App.css\";\n\nexport default function Maps()  {\n  const [allcase, setAllcase] = React.useState();\n  const center = useMemo(() => ({ lat: 13.7884586, lng: 100.6083957}), []);\n  React.useEffect(() => {\n    async function getJSON() {\n      let arr = [];\n      const response = await fetch(\"http://localhost:3333/getmap\", {\n        method: \"GET\", // or 'PUT'\n      });\n\n      const sum = await response.json();\n      for(let i=0;i<sum.length;i++ ){\n        const obj = {lat :parseFloat(sum[i].lat),lng :parseFloat(sum[i].lng)};\n     \n        arr.push(obj);\n      }\n      setAllcase(arr);\n    }\n    getJSON();\n  }, []);\n  React.useEffect(() => {\n   console.log(allcase);\n  }, [allcase]);\n  const { isLoaded } = useLoadScript({\n    googleMapsApiKey:\"AIzaSyBJNF1WF1PZ072rIlzasimj-wEVnaCu2WY\",\n  });\n  const markers = [\n    { lat: 18.5204, lng: 73.8567 },\n    { lat: 18.5314, lng: 73.8446 },\n    { lat: 18.5642, lng: 73.7769 },\n  ];\n\n  const onLoad = (map) => {\n   \n    const bounds = new google.maps.LatLngBounds();\n    allcase?.forEach(({ lat, lng }) => bounds.extend({ lat, lng }));\n    map.fitBounds(bounds);\n  };\n\n  return (\n    <div className=\"App\">\n      {!isLoaded ? (\n        <h1>Loading...</h1>\n      ) : (\n        <GoogleMap mapContainerClassName=\"map-container\" onLoad={onLoad}  center={center} zoom={10}>\n          {allcase?.map(({ lat, lng }) => (\n            <Marker position={{ lat, lng }} />\n          ))}\n        </GoogleMap>\n      )}\n    </div>\n  );\n};\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}