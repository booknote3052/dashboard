{"ast":null,"code":"var _jsxFileName = \"/Users/bookstore/Desktop/krmentor/material-dashboard-material-ui-v4/src/views/Maps/Maps.js\",\n  _s = $RefreshSig$();\nimport { useState, useCallback } from \"react\";\nimport { GoogleMapsProvider } from \"@ubilabs/google-maps-react-hooks\";\nimport { MarkerClusterer } from \"@googlemaps/markerclusterer\";\nimport SuperClusterAlgorithm from './superClusterAlgorithm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mapOptions = {\n  zoom: 12,\n  center: {\n    lat: 43.68,\n    lng: -79.43\n  }\n};\nexport default function Index() {\n  _s();\n  const [mapContainer, setMapContainer] = useState(null);\n  const onLoad = useCallback(map => addMarkers(map), []);\n  return /*#__PURE__*/_jsxDEV(GoogleMapsProvider, {\n    googleMapsAPIKey: \"AIzaSyBJNF1WF1PZ072rIlzasimj-wEVnaCu2WY\",\n    options: mapOptions,\n    mapContainer: mapContainer,\n    onLoad: onLoad,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: node => setMapContainer(node),\n      style: {\n        height: \"100vh\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(Index, \"EHYD/9jQhW/o4vDSrivVu4jiCig=\");\n_c = Index;\nfunction addMarkers(map) {\n  const infoWindow = new google.maps.InfoWindow();\n  const markers = trees.map(([name, lat, lng]) => {\n    const marker = new google.maps.Marker({\n      position: {\n        lat,\n        lng\n      }\n    });\n    marker.addListener(\"click\", () => {\n      infoWindow.setPosition({\n        lat,\n        lng\n      });\n      infoWindow.setContent(`\n        <div class=\"info-window\">\n          <h2>${name}</h2>\n        </div>\n      `);\n      infoWindow.open({\n        map\n      });\n    });\n    return marker;\n  });\n  new MarkerClusterer({\n    markers,\n    map,\n    algorithm: new SuperClusterAlgorithm({\n      radius: 200\n    })\n  });\n}\nvar _c;\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"names":["useState","useCallback","GoogleMapsProvider","MarkerClusterer","SuperClusterAlgorithm","jsxDEV","_jsxDEV","mapOptions","zoom","center","lat","lng","Index","_s","mapContainer","setMapContainer","onLoad","map","addMarkers","googleMapsAPIKey","options","children","ref","node","style","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","infoWindow","google","maps","InfoWindow","markers","trees","name","marker","Marker","position","addListener","setPosition","setContent","open","algorithm","radius","$RefreshReg$"],"sources":["/Users/bookstore/Desktop/krmentor/material-dashboard-material-ui-v4/src/views/Maps/Maps.js"],"sourcesContent":["import { useState, useCallback } from \"react\";\nimport { GoogleMapsProvider } from \"@ubilabs/google-maps-react-hooks\";\nimport { MarkerClusterer } from \"@googlemaps/markerclusterer\";\nimport SuperClusterAlgorithm from './superClusterAlgorithm'\n\nconst mapOptions = {\n  zoom: 12,\n  center: {\n    lat: 43.68,\n    lng: -79.43,\n  },\n};\n\nexport default function Index() {\n  const [mapContainer, setMapContainer] = useState(null);\n  const onLoad = useCallback((map) => addMarkers(map), []);\n\n  return (\n    <GoogleMapsProvider\n      googleMapsAPIKey=\"AIzaSyBJNF1WF1PZ072rIlzasimj-wEVnaCu2WY\"\n      options={mapOptions}\n      mapContainer={mapContainer}\n      onLoad={onLoad}\n    >\n      <div ref={(node) => setMapContainer(node)} style={{ height: \"100vh\" }} />\n    </GoogleMapsProvider>\n  );\n}\n\nfunction addMarkers(map) {\n  const infoWindow = new google.maps.InfoWindow();\n\n  const markers = trees.map(([name, lat, lng]) => {\n    const marker = new google.maps.Marker({ position: { lat, lng } });\n\n    marker.addListener(\"click\", () => {\n      infoWindow.setPosition({ lat, lng });\n      infoWindow.setContent(`\n        <div class=\"info-window\">\n          <h2>${name}</h2>\n        </div>\n      `);\n      infoWindow.open({ map });\n    });\n\n    return marker;\n  });\n\n  new MarkerClusterer({\n    markers,\n    map,\n    algorithm: new SuperClusterAlgorithm({ radius: 200 }),\n  });\n}"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC7C,SAASC,kBAAkB,QAAQ,kCAAkC;AACrE,SAASC,eAAe,QAAQ,6BAA6B;AAC7D,OAAOC,qBAAqB,MAAM,yBAAyB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,UAAU,GAAG;EACjBC,IAAI,EAAE,EAAE;EACRC,MAAM,EAAE;IACNC,GAAG,EAAE,KAAK;IACVC,GAAG,EAAE,CAAC;EACR;AACF,CAAC;AAED,eAAe,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAMgB,MAAM,GAAGf,WAAW,CAAEgB,GAAG,IAAKC,UAAU,CAACD,GAAG,CAAC,EAAE,EAAE,CAAC;EAExD,oBACEX,OAAA,CAACJ,kBAAkB;IACjBiB,gBAAgB,EAAC,yCAAyC;IAC1DC,OAAO,EAAEb,UAAW;IACpBO,YAAY,EAAEA,YAAa;IAC3BE,MAAM,EAAEA,MAAO;IAAAK,QAAA,eAEff,OAAA;MAAKgB,GAAG,EAAGC,IAAI,IAAKR,eAAe,CAACQ,IAAI,CAAE;MAACC,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAQ;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvD,CAAC;AAEzB;AAAChB,EAAA,CAduBD,KAAK;AAAAkB,EAAA,GAALlB,KAAK;AAgB7B,SAASM,UAAUA,CAACD,GAAG,EAAE;EACvB,MAAMc,UAAU,GAAG,IAAIC,MAAM,CAACC,IAAI,CAACC,UAAU,CAAC,CAAC;EAE/C,MAAMC,OAAO,GAAGC,KAAK,CAACnB,GAAG,CAAC,CAAC,CAACoB,IAAI,EAAE3B,GAAG,EAAEC,GAAG,CAAC,KAAK;IAC9C,MAAM2B,MAAM,GAAG,IAAIN,MAAM,CAACC,IAAI,CAACM,MAAM,CAAC;MAAEC,QAAQ,EAAE;QAAE9B,GAAG;QAAEC;MAAI;IAAE,CAAC,CAAC;IAEjE2B,MAAM,CAACG,WAAW,CAAC,OAAO,EAAE,MAAM;MAChCV,UAAU,CAACW,WAAW,CAAC;QAAEhC,GAAG;QAAEC;MAAI,CAAC,CAAC;MACpCoB,UAAU,CAACY,UAAU,CAAE;AAC7B;AACA,gBAAgBN,IAAK;AACrB;AACA,OAAO,CAAC;MACFN,UAAU,CAACa,IAAI,CAAC;QAAE3B;MAAI,CAAC,CAAC;IAC1B,CAAC,CAAC;IAEF,OAAOqB,MAAM;EACf,CAAC,CAAC;EAEF,IAAInC,eAAe,CAAC;IAClBgC,OAAO;IACPlB,GAAG;IACH4B,SAAS,EAAE,IAAIzC,qBAAqB,CAAC;MAAE0C,MAAM,EAAE;IAAI,CAAC;EACtD,CAAC,CAAC;AACJ;AAAC,IAAAhB,EAAA;AAAAiB,YAAA,CAAAjB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}